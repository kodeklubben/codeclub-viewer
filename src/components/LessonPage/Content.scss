//////////////////////////////////////////////
// The code below was originally copied from
// codeclub_lesson_builder/styles/main.less
// and
// codeclub_lesson_builder/styles/lesson.less
//////////////////////////////////////////////
@import '../../../node_modules/highlight.js/styles/idea';
@import '../../styles/variables';
@import '../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/mixins';
@import '../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/tables';

$checkbox-blue: #abdbea;

@mixin styledList {
  ul,
  ol {
    padding: 0;
    margin: 0 0 20px;
  }
  ul.task-list li.task-list-item::before {
    display: none;
  }
  li {
    list-style: none;
    padding-top: 10px;
    padding-bottom: 10px;
    margin-left: 45px;
  }
  li::before {
    content: " ";
    border-radius: 20px;
    border: 3px solid $checkbox-blue;
    padding: 8px;
    float: left;
    margin-left: -40px;
    margin-top: 2px;
  }
  label {
    font-weight: normal;
    margin-left: 6px;
  }
}

.check,
.activity,
.save {
  @include styledList;
}

// scratch code blocks
pre.blocks,
code.b {
  background-color: inherit;
  border: 0;
}

// code blocks
pre > code {
  // override hljs background
  background-color: transparent;
}

@mixin headingStyle {
  color: #fff;
  background: #349946;
  padding: 10px;
  border-radius: 5px;
}

// sections
section.activity {
  // activities, "Step 1: Bla bla"
  h1 {
    @include headingStyle;
  }
  .subsection h2 {
    @include styledList;
    @include headingStyle;
    font-weight: 300;
  }
}

section.check {
  // check lists
  h2 {
    padding-top: 4px;
    padding-bottom: 9px;

    img {
      height: 40px;
      vertical-align: text-bottom;
      padding-right: 10px;
    }
  }
}

section.try {
  background: #abdbea;
  border-radius: 10px;
  padding: 1px 20px 10px;
  code {
    background-color: #fff;
    color: #007cc9;
  }
  li::before {
    border: 3px solid #fff;
  }
}

section.protip,
section.tip {
  border: 3px solid #ff7f00;
  background: #fff99d;
  border-radius: 12px;
  padding: 0 20px 20px;
  margin-top: 20px;
  margin-bottom: 20px;
}

section.flag {
  border-top: 3px dotted rgb(230, 134, 45);
  padding-bottom: 20px;
  margin-top: 20px;
  margin-bottom: 20px;
  h2 {
    color: rgb(54, 161, 55);
    margin-top: 10px;
    margin-bottom: 10px;
    padding-top: 15px;
    padding-bottom: 10px;

    img {
      height: 40px;
      vertical-align: text-bottom;
      padding-right: 10px;
    }
  }
}

section.save {
  border-top: 3px solid rgb(36, 90, 154);
  margin: 20px 0;
  h2 {
    color: rgb(36, 90, 154);
    margin: 0;
    padding-top: 10px;
    padding-bottom: 20px;

    img {
      height: 40px;
      vertical-align: text-bottom;
      padding-right: 10px;
    }
  }
}

section.challenge {
  border: 3px solid #00b1da;
  border-radius: 12px;
  padding-bottom: 10px;
  margin-top: 20px;
  margin-bottom: 20px;
  h2 {
    color: #fff;
    background: #00b1da;
    padding-left: 20px;
    padding-top: 10px;
    padding-bottom: 10px;
    margin-top: 0;

    @media print {
      border-bottom: 2px #00b1da solid;
    }
  }
  > * {
    padding: 0 20px;
  }
}

// manual colors for scratch code
// example: Press `motion`{.blockmotion} ...
code {
  &.blockmotion { background-color: #505fd7; }
  &.blocklooks { background-color: #9b33d9; }
  &.blocksound { background-color: #d000c2; }
  &.blockpen { background-color: #00a16f; }
  &.blockdata { background-color: #ff7500; }
  &.blockevents { background-color: #d38117; }
  &.blockcontrol { background-color: #e9aa00; }
  &.blocksensing { background-color: #00a3e6; }
  &.blockoperators { background-color: #00c114; }
  &.blockmoreblocks { background-color: #71009a; }

  &.blockmotion,
  &.blocklooks,
  &.blocksound,
  &.blockpen,
  &.blockdata,
  &.blockevents,
  &.blockcontrol,
  &.blocksensing,
  &.blockoperators,
  &.blockmoreblocks {
    color: #fff;
  }
}

//// tables
table {
  // add table class to all tables, assumes that tables are only used
  // for listing stuff and is not in use for other components like calendars
  @extend .table;
}

// horisontal scroll on screens, do not wrap
// not keyword negate _whole_ media query,
// making `(not print) and (min-width: @screen-sm)` impossible
@media aural, braille, handheld, projection, screen, tty, tv, embossed {
  pre > code {
    word-wrap: normal;
    white-space: pre;
  }
}

// embedded videos
.video-container {
  position: relative;
  padding-bottom: 56.25%; // 16:9
  height: 0;
  overflow: hidden;
  margin: 30px 0 60px;
  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

input[type="checkbox"] {
  display: none;
}

input[type="checkbox"] + label {
  position: relative;
  font-weight: normal;
  margin-left: 0;
}

input[type="checkbox"] + label::before {
  content: '\a0'; // non-breaking space
  display: inline-block;
  visibility: visible;
  width: 1.3em;
  height: 1.3em;
  margin: 0 0.6em 0 -2.2em;
  line-height: 1.1em;
  text-align: center;
  border: 3px solid $checkbox-blue;
  border-radius: 3px;
}

input[type="checkbox"]:checked + label::before {
  content: '\2714'; // checkmark
  line-height: 1.1em;
  padding-left: 0.1em;
}

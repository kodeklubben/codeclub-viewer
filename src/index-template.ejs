<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

  <% for (key in htmlWebpackPlugin.files.css) { %>
  <link href="<%= htmlWebpackPlugin.files.css[key] %>" rel="stylesheet">
  <% } %>

</head>
<body>
  <div id="app"></div>

  <% for (key in htmlWebpackPlugin.files.chunks) { %>
  <script src="<%= htmlWebpackPlugin.files.chunks[key].entry %>" type="text/javascript"></script>
  <% } %>
  <script>

    function makeCodeRenderPre(pre) {
      var f = document.getElementById("makecoderenderer");
      f.contentWindow.postMessage({
        type: "renderblocks",
        id: pre.id,
        code: pre.innerText
      }, "https://makecode.microbit.org/");
    }

    function renderSnippets() {
      let pres = document.getElementsByTagName("pre");
      Array.prototype.forEach.call(pres, function(pre) {
        makeCodeRenderPre(pre);
      })
    }

    function makeCodeInjectRenderer() {
      var f = document.createElement("iframe");
      f.id = "makecoderenderer";
      f.style.position = "absolute";
      f.style.left = 0;
      f.style.bottom = 0;
      f.style.width = "1px";
      f.style.height = "1px";            
      f.src = "https://makecode.microbit.org/--docs?render=1&lang"
      document.body.appendChild(f);
    }

    // listen for messages
    window.addEventListener("message", function (ev) {
      var msg = ev.data;
      if (msg.source != "makecode") return;
      switch (msg.type) {
        case "renderready":
          // start rendering snippets!
          renderSnippets();
          break;
        case "renderblocks":
          var svg = msg.svg; // this is an string containing SVG
          var id = msg.id; // this is the id you sent
          // replace text with svg
          var img = document.createElement("img");
          img.src = msg.uri;
          img.width = msg.width;
          img.height = msg.height;
          var code = document.getElementsByTagName("pre")[0];
          if (code.className === 'microbit') {
            code.parentElement.insertBefore(img, code);
            code.parentElement.removeChild(code);
          }
          break;
      }
    }, false);


    // load the renderer
    makeCodeInjectRenderer();

  </script>
</body>
</html>
